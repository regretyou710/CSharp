//------------------------------------------------------------------------------
// <auto-generated>
//    這個程式碼是由範本產生。
//
//    對這個檔案進行手動變更可能導致您的應用程式產生未預期的行為。
//    如果重新產生程式碼，將會覆寫對這個檔案的手動變更。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM 關聯性中繼資料

[assembly: EdmRelationshipAttribute("SchoolModel", "CourseClassRoom", "Course", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CS_demo03.Course), "ClassRoom", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CS_demo03.ClassRoom), true)]

#endregion

namespace CS_demo03
{
    #region 內容
    
    /// <summary>
    /// 沒有可用的中繼資料文件。
    /// </summary>
    public partial class SchoolEntities : ObjectContext
    {
        #region 建構函式
    
        /// <summary>
        /// 使用在應用程式組態檔的 'SchoolEntities' 區段中找到的連接字串，初始化新的 SchoolEntities 物件。
        /// </summary>
        public SchoolEntities() : base("name=SchoolEntities", "SchoolEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 SchoolEntities 物件。
        /// </summary>
        public SchoolEntities(string connectionString) : base(connectionString, "SchoolEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 SchoolEntities 物件。
        /// </summary>
        public SchoolEntities(EntityConnection connection) : base(connection, "SchoolEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region 部分方法
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet 屬性
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        public ObjectSet<Course> Course
        {
            get
            {
                if ((_Course == null))
                {
                    _Course = base.CreateObjectSet<Course>("Course");
                }
                return _Course;
            }
        }
        private ObjectSet<Course> _Course;
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        public ObjectSet<ClassRoom> ClassRoom
        {
            get
            {
                if ((_ClassRoom == null))
                {
                    _ClassRoom = base.CreateObjectSet<ClassRoom>("ClassRoom");
                }
                return _ClassRoom;
            }
        }
        private ObjectSet<ClassRoom> _ClassRoom;

        #endregion

        #region AddTo 方法
    
        /// <summary>
        /// 將新物件加入 Course EntitySet 的方法已被取代。請考慮改為使用關聯的 ObjectSet&lt;T&gt; 屬性的 .Add 方法。
        /// </summary>
        public void AddToCourse(Course course)
        {
            base.AddObject("Course", course);
        }
    
        /// <summary>
        /// 將新物件加入 ClassRoom EntitySet 的方法已被取代。請考慮改為使用關聯的 ObjectSet&lt;T&gt; 屬性的 .Add 方法。
        /// </summary>
        public void AddToClassRoom(ClassRoom classRoom)
        {
            base.AddObject("ClassRoom", classRoom);
        }

        #endregion

    }

    #endregion

    #region 實體
    
    /// <summary>
    /// 沒有可用的中繼資料文件。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SchoolModel", Name="ClassRoom")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ClassRoom : EntityObject
    {
        #region Factory 方法
    
        /// <summary>
        /// 建立新 ClassRoom 物件。
        /// </summary>
        /// <param name="classRoomId">ClassRoomId 屬性的初始值。</param>
        /// <param name="course_Id">Course_Id 屬性的初始值。</param>
        public static ClassRoom CreateClassRoom(global::System.Int32 classRoomId, global::System.Int32 course_Id)
        {
            ClassRoom classRoom = new ClassRoom();
            classRoom.ClassRoomId = classRoomId;
            classRoom.Course_Id = course_Id;
            return classRoom;
        }

        #endregion

        #region 簡單屬性
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClassRoomId
        {
            get
            {
                return _ClassRoomId;
            }
            set
            {
                if (_ClassRoomId != value)
                {
                    OnClassRoomIdChanging(value);
                    ReportPropertyChanging("ClassRoomId");
                    _ClassRoomId = StructuralObject.SetValidValue(value, "ClassRoomId");
                    ReportPropertyChanged("ClassRoomId");
                    OnClassRoomIdChanged();
                }
            }
        }
        private global::System.Int32 _ClassRoomId;
        partial void OnClassRoomIdChanging(global::System.Int32 value);
        partial void OnClassRoomIdChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Course_Id
        {
            get
            {
                return _Course_Id;
            }
            set
            {
                OnCourse_IdChanging(value);
                ReportPropertyChanging("Course_Id");
                _Course_Id = StructuralObject.SetValidValue(value, "Course_Id");
                ReportPropertyChanged("Course_Id");
                OnCourse_IdChanged();
            }
        }
        private global::System.Int32 _Course_Id;
        partial void OnCourse_IdChanging(global::System.Int32 value);
        partial void OnCourse_IdChanged();

        #endregion

        #region 導覽屬性
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SchoolModel", "CourseClassRoom", "Course")]
        public Course Course
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Course>("SchoolModel.CourseClassRoom", "Course").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Course>("SchoolModel.CourseClassRoom", "Course").Value = value;
            }
        }
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Course> CourseReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Course>("SchoolModel.CourseClassRoom", "Course");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Course>("SchoolModel.CourseClassRoom", "Course", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 沒有可用的中繼資料文件。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SchoolModel", Name="Course")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Course : EntityObject
    {
        #region Factory 方法
    
        /// <summary>
        /// 建立新 Course 物件。
        /// </summary>
        /// <param name="courseId">CourseId 屬性的初始值。</param>
        /// <param name="courseName">CourseName 屬性的初始值。</param>
        public static Course CreateCourse(global::System.Int32 courseId, global::System.String courseName)
        {
            Course course = new Course();
            course.CourseId = courseId;
            course.CourseName = courseName;
            return course;
        }

        #endregion

        #region 簡單屬性
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CourseId
        {
            get
            {
                return _CourseId;
            }
            set
            {
                if (_CourseId != value)
                {
                    OnCourseIdChanging(value);
                    ReportPropertyChanging("CourseId");
                    _CourseId = StructuralObject.SetValidValue(value, "CourseId");
                    ReportPropertyChanged("CourseId");
                    OnCourseIdChanged();
                }
            }
        }
        private global::System.Int32 _CourseId;
        partial void OnCourseIdChanging(global::System.Int32 value);
        partial void OnCourseIdChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CourseName
        {
            get
            {
                return _CourseName;
            }
            set
            {
                OnCourseNameChanging(value);
                ReportPropertyChanging("CourseName");
                _CourseName = StructuralObject.SetValidValue(value, false, "CourseName");
                ReportPropertyChanged("CourseName");
                OnCourseNameChanged();
            }
        }
        private global::System.String _CourseName;
        partial void OnCourseNameChanging(global::System.String value);
        partial void OnCourseNameChanged();

        #endregion

        #region 導覽屬性
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SchoolModel", "CourseClassRoom", "ClassRoom")]
        public EntityCollection<ClassRoom> ClassRoom
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ClassRoom>("SchoolModel.CourseClassRoom", "ClassRoom");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ClassRoom>("SchoolModel.CourseClassRoom", "ClassRoom", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
